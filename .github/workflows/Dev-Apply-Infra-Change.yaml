# .github/workflows/aws-terraform-plan.yml

# This workflow is triggered Manually Once Dev Terraform Plan Work Flow Succeeded

name: DEV AWS Terraform Apply

# The on keyword defines the events that will trigger the workflow.
on: workflow_dispatch

# The permissions keyword defines the permissions that the workflow will need to run.
permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR
  
# The env keyword defines the environment variables that will be available to the workflow.on: workflow_dispatch
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.DEV_AWS_REGION }}
  # regions from GH Secreates

# The jobs keyword defines the jobs that will be run by the workflow.
jobs:
  terraform:
    # The runs-on keyword defines the type of runner that will be used to run the job.
    runs-on: ubuntu-latest
    # The defaults keyword defines the default values for the job.
    defaults:
      run:
        shell: bash
        working-directory: ./src

    # The steps keyword defines the steps that will be run by the job.
    steps:
      - name: Checkout Git Repository
        # The uses keyword defines an action that will be used by the step.
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
          
      # - name: copy provider file
      #   run: |
      #     cp .aws_providers/dev-jnj.tf src
    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        run: terraform init

      - name: Create workspace
        working-directory: ./src
        run: terraform workspace new dev
        
      - name: select workspace
        working-directory: ./src
        run: |
          terraform workspace select dev  

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform apply
        working-directory: ./src
        run: terraform apply -auto-approve -input=false
        # if: github.event_name == 'push'
        # continue-on-error: true

      # - name: Comment on Pull Request
      #   if: github.event_name == 'pull_request'
      #   run: |
      #     echo "Terraform plan summary:"
      #     terraform show -json | jq '.resource_changes[] | .change.actions[]' | grep -E 'create|update|delete'